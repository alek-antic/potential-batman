public class Crypt {

	public static final String keyword = "crypt";
	private char[][] key = new char[5][5];
	private int[][] indecies = new int[25][2];
	

	public void generateKey(String keyword) {
		keyword = keyword.toUpperCase();
		if (keyword.indexOf('I') < keyword.indexOf('J')) {
			keyword = keyword.replaceAll("J", "I");
		} else {
			keyword = keyword.replaceAll("I", "J");
		}

		StringBuffer tempKey = new StringBuffer(keyword);
		int[] chars = new int[26];

		for (int i = 0; i < tempKey.length(); i++) {
			int k = Character.toUpperCase(tempKey.charAt(i)) - 65;
			if (chars[k] == 0) {
				chars[k]++;
			} else {
				tempKey.deleteCharAt(i);
			}
		}

		for (int i = 0; i < 26; i++) {
			if (chars[i] == 0) {
				tempKey.append((char) (i + 65));
			}
		}
		String temp = tempKey.toString();
		if (temp.indexOf('I') < temp.indexOf('J')) {
			temp = temp.replaceAll("J", "");
		} else {
			temp = temp.replaceAll("I", "");
		}
		
		tempKey = new StringBuffer(temp);
		
		System.out.println(tempKey);
		
		for(int i = 0; i < 5; i++) {
			for(int j = 0; i < 5; i++) {
				key[j][i] = Character.toUpperCase(tempKey.charAt(0));
				indecies[key[j][i] - 65][0] = i;
				indecies[key[j][i] - 65][1] = j;
				tempKey.deleteCharAt(0);
			}
		}
	}
	
	public char[][] getKey() {
		return key;
	}

	public void encrypt(String inputFileName, String outputFileName,
			String keyword) {
		FileIO accessor = new FileIO();
		String data = accessor.readFile(inputFileName);

		generateKey(keyword);

		accessor.writeFile(outputFileName, data);
	}

	public void decrypt(String inputFileName, String outputFileName,
			String keyword) {
		FileIO accessor = new FileIO();
		String data = accessor.readFile(inputFileName);

		generateKey(keyword);

		accessor.writeFile(outputFileName, data);
	}
}
