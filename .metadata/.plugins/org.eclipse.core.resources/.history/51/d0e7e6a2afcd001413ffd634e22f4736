package simschool.usables;

import java.util.ArrayList;
import javax.xml.parsers.*;
import simschool.people.*;
import org.w3c.dom.*;
import java.io.*;

public class XMLTranslator {

	private ArrayList<Person> people;
	private ArrayList<Teacher> teachers;
	private ArrayList<Student> students;
	private ArrayList<CollegeStudent> collegeStudents;
	private String fileData;

	public XMLTranslator(String filename) {
		fileData = FileIO.readFile(filename);
	}

	public void readXML() {
		try {
			File xml = new File("peopleXML.xml");
			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
			DocumentBuilder builder = factory.newDocumentBuilder();

			Document document = builder.parse(xml);

			document.getDocumentElement().normalize();

			NodeList persons = document.getElementsByTagName("People");
			NodeList teacher = document.getElementsByTagName("Teacher");
			NodeList student = document.getElementsByTagName("Students");
			NodeList collegeStudent = document
					.getElementsByTagName("CollegeStudent");

			for (int i = 0; i < persons.getLength(); i++) {
				Node nNode = persons.item(i);

				if (nNode.getNodeType() == Node.ELEMENT_NODE) {
					Element e = (Element) nNode;

					String name = e.getAttribute("name");
					int age = Integer.parseInt(e.getAttribute("age"));
					String gender = e.getAttribute("gender");
					Person p = new Person(name, age, gender);
					people.add(p);
				}
			}

			for (int i = 0; i < teacher.getLength(); i++) {
				Node nNode = persons.item(i);

				if (nNode.getNodeType() == Node.ELEMENT_NODE) {
					Element e = (Element) nNode;

					String name = e.getAttribute("name");
					int age = Integer.parseInt(e.getAttribute("age"));
					String gender = e.getAttribute("gender");
					String subject = e.getAttribute("subject");
					double salary = Double.parseDouble(e.getAttribute("salary"));
					Teacher p = new Teacher(name, age, gender,subject,salary);
					teachers.add(p);
				}
			}
			
			for(int i = 0; i < student.getLength(); i++) {
				Node nNode = persons.item(i);
				
				if(nNode.getNodeType() == Node.ELEMENT_NODE) {
					Element e = (Element)nNode;
					
					String name = e.getAttribute("name");
					int age = Integer.parseInt(e.getAttribute("age"));
					String gender = e.getAttribute("gender");
					String ID = e.getAttribute("ID");
					double GPA = Double.parseDouble(e.getAttribute("GPA"));
					Student p = new Student(name,age,gender,ID,GPA);
					students.add(p);
				}
			}
			
			for(int i = 0; i < collegeStudent.getLength(); i++) {
				Node nNode = persons.item(i);
				
				if(nNode.getNodeType() == Node.ELEMENT_NODE) {
					Element e = (Element)nNode;
					
					String name = e.getAttribute("name");
					int age = Integer.parseInt(e.getAttribute("age"));
					String gender = e.getAttribute("gender");
					String ID = e.getAttribute("ID");
					double GPA = Double.parseDouble(e.getAttribute("GPA"));
					int year = Integer.parseInt(e.getAttribute("year"));
					String major = e.getAttribute("major");
					CollegeStudent p = new CollegeStudent(name,age,gender,ID,GPA,year,major);
					people.add(p);
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
